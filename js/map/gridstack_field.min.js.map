{"version":3,"sources":["sites/all/modules/gridstack_field/es6/gridstack_field.es6"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","$","Drupal","settings","Grid","selector","arguments","undefined","instance","TypeError","_classCallCheck","this","setuped","value","options","console","log","_saveParagraphPosition","jsonData","_Drupal$settings","href","basePath","pathPrefix","post","JSON","stringify","ajax","url","type","dataType","data","success","hasClass","behaviors","gridstackField","attach","context","$grid_container","$grid_items","jsonFieldData","$fieldGridstack","gridstack_field","gridstack","find","items","each","item","obj","x","y","width","height","delta","push","once","prepend","on","event","el","dataset","text","jQuery"],"mappings":"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","file":"../gridstack_field.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @file\n * Provides GridStack loaders.\n */\n\n(function ($, Drupal, settings) {\n  'use strict';\n\n  /**\n   * Custom wrapper for grid library.\n   */\n\n  var Grid = function () {\n    function Grid() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.grid-stack';\n\n      _classCallCheck(this, Grid);\n\n      this.selector = selector;\n      this.setuped = 0;\n    }\n\n    _createClass(Grid, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        this.options = options;\n        return this;\n      }\n    }, {\n      key: 'applyListentrs',\n      value: function applyListentrs() {}\n    }, {\n      key: 'setup',\n      value: function setup() {\n        // $(this.selector).gridstack(this.options);\n        // if (!this.setuped) {\n        //   this.setuped = 1;\n        // }\n      }\n    }, {\n      key: 'debug',\n      value: function debug() {\n        console.log(this);\n      }\n    }]);\n\n    return Grid;\n  }();\n\n  /**\n   * Helper function.\n   *\n   * Add data to json field and send to drupal callback.\n   */\n\n\n  function _saveParagraphPosition(jsonData) {\n    var _Drupal$settings = Drupal.settings,\n        basePath = _Drupal$settings.basePath,\n        pathPrefix = _Drupal$settings.pathPrefix;\n\n    var href = '' + basePath + pathPrefix + 'grid_update';\n    var post = \"grid_items=\" + JSON.stringify(jsonData);\n\n    // Send data to drupal side.\n    $.ajax({\n      url: href,\n      type: \"POST\",\n      dataType: 'json',\n      data: post,\n      success: function success(data) {}\n    });\n  }\n\n  // Global constants;\n  var $body = $('body');\n  var NODE_ADD_PAGE = $body.hasClass('page-node-add');\n  var grid = new Grid('.form-item-grid');\n\n  /**\n   * Implements grid and backbone collections on node edit page.\n   */\n  Drupal.behaviors.gridstackField = {\n    attach: function attach(context, settings) {\n      var $fieldGridstack = $('.form-item-grid');\n      var options = {};\n      if (typeof settings.gridstack_field !== 'undefined') {\n        options = settings.gridstack_field.settings;\n        $fieldGridstack.gridstack(options);\n\n        // grid.setOptions(options);\n        // grid.setup();\n      }\n\n      // Fill in JSON field with parameters from grid items.\n      (function () {\n        var $grid_container = $('.form-item-grid');\n        var $new_element = $grid_container.find('.ajax-new-content');\n        var $grid_items = $grid_container.find('.grid-stack-item.ui-draggable.ui-resizable');\n        var jsonFieldData = {};\n        jsonFieldData.items = [];\n        jsonFieldData.settings = options;\n\n        // if ($new_element.length) {\n        // }\n\n        // Fill in cache if field with json is not empty.\n        if ($grid_items.length) {\n          $grid_items.each(function (key, item) {\n            var obj = {\n              x: $(item).data('gs-x'),\n              y: $(item).data('gs-y'),\n              width: $(item).data('gs-width'),\n              height: $(item).data('gs-height'),\n              delta: $(item).data('delta')\n            };\n            jsonFieldData.items.push(obj);\n          });\n          _saveParagraphPosition(jsonFieldData);\n        }\n\n        $('.field-widget-paragraphs-gridstack').once('save-item', function () {\n          // Add custom element with value of item height.\n          $grid_items.each(function (key, item) {\n            var height = $(item).data('gs-height');\n            height = 'Height: ' + height * 50 + 'px';\n            $(item).find('.grid-stack-item-content').prepend('<div class=\"height-counter\">' + height + '</div>');\n          });\n\n          $(this).on('change', function (event, items) {\n            if (items != undefined) {\n              $(items).each(function (i) {\n                var obj = {\n                  x: this.x,\n                  y: this.y,\n                  width: this.width,\n                  height: this.height,\n                  delta: this.el[0].dataset.delta\n                };\n\n                if (jsonFieldData.length === 0 || items[i].el[0].dataset.delta === jsonFieldData.length) {\n                  jsonFieldData.items.push(obj);\n                } else {\n                  jsonFieldData.items[this.el[0].dataset.delta].x = this.x;\n                  jsonFieldData.items[this.el[0].dataset.delta].y = this.y;\n                  jsonFieldData.items[this.el[0].dataset.delta].width = this.width;\n                  jsonFieldData.items[this.el[0].dataset.delta].height = this.height;\n                }\n\n                // Update custom element with value of item height.\n                var height = this.height;\n                var $height_container = $(items[i].el[0]).find('.height-counter');\n                height = 'Height: ' + height * 50 + 'px';\n                $height_container.text(height);\n              });\n              _saveParagraphPosition(jsonFieldData);\n            }\n          });\n        });\n      })();\n    }\n  };\n})(jQuery, Drupal, Drupal.settings);\n\n},{}]},{},[1]);\n"]}